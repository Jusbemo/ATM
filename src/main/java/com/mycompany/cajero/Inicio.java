/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cajero;

import java.awt.Color;

import javax.swing.*;
import javax.swing.border.Border;
import java.awt.*;
import java.math.BigDecimal;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author JoustinBergerMonge
 */
public class Inicio extends javax.swing.JFrame {

    int xMouse, yMouse;

    private final String name;
    private final String lastname;
    private final String username;
    private int pin;
    private final List<Cuenta> accounts;

    public Inicio(String name, String lastname, List<Cuenta> accounts, String username, int pin) {
        this.name = name;
        this.lastname = lastname;
        this.accounts = accounts;
        this.username = username;
        this.pin = pin;

        initComponents();

        showAccountPanels();
        updateHeaderLabel();

    }

    private void updateHeaderLabel() {
        String fullTitle = title.getText();
        fullTitle += (" " + name + " " + lastname).toUpperCase();
        title.setText(fullTitle);
    }

    private void showAccountPanels() {
        JPanel panelContainer = new JPanel();
        panelContainer.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));
        panelContainer.setBackground(Color.WHITE);
        panelContainer.setBorder(null);

        for (Cuenta account : accounts) {
            CuentaPanel cuentaPanel = new CuentaPanel(account);
            cuentaPanel.setBackground(Color.WHITE);
            Border border = BorderFactory.createLineBorder(Color.BLACK);
            cuentaPanel.setBorder(BorderFactory.createCompoundBorder(border, BorderFactory.createEmptyBorder(10, 10, 10, 10)));

            panelContainer.add(cuentaPanel);

        }

        JPanel centerPanel = new JPanel(new GridBagLayout());
        centerPanel.add(panelContainer);
        centerPanel.setBackground(Color.white);
        centerPanel.setBorder(null);

        JScrollPane scrollPane = new JScrollPane(centerPanel);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        scrollPane.setBorder(null);

        bg.setLayout(new BorderLayout());
        bg.add(scrollPane, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        exitBtn = new javax.swing.JPanel();
        exit = new javax.swing.JLabel();
        backBtn = new javax.swing.JPanel();
        back1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        pinBtn = new javax.swing.JPanel();
        pinBtnLabel = new javax.swing.JLabel();
        missingBtn = new javax.swing.JPanel();
        missingLabel = new javax.swing.JLabel();
        retiroBtn = new javax.swing.JPanel();
        retiroLabel = new javax.swing.JLabel();
        depositoBtn = new javax.swing.JPanel();
        depositoBtnLabel = new javax.swing.JLabel();
        transferBtn = new javax.swing.JPanel();
        transferBtnLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 0));
        title.setText("BIENVENIDO");
        bg.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 570, -1));

        header.setBackground(new java.awt.Color(255, 255, 255));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });
        header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitBtn.setBackground(new java.awt.Color(255, 255, 255));

        exit.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        exit.setForeground(new java.awt.Color(0, 0, 0));
        exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit.setText("X");
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitMouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitBtnLayout = new javax.swing.GroupLayout(exitBtn);
        exitBtn.setLayout(exitBtnLayout);
        exitBtnLayout.setHorizontalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(exitBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        exitBtnLayout.setVerticalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(exitBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        header.add(exitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 40, 40));

        backBtn.setBackground(new java.awt.Color(255, 255, 255));

        back1.setFont(new java.awt.Font("Serif", 1, 26)); // NOI18N
        back1.setForeground(new java.awt.Color(0, 0, 0));
        back1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        back1.setText("â¬…");
        back1.setToolTipText("");
        back1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                back1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                back1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout backBtnLayout = new javax.swing.GroupLayout(backBtn);
        backBtn.setLayout(backBtnLayout);
        backBtnLayout.setHorizontalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(back1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        backBtnLayout.setVerticalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(back1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        header.add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 0, 40, 40));

        bg.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 50));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 800, 20));

        pinBtn.setBackground(new java.awt.Color(0, 0, 0));
        pinBtn.setForeground(new java.awt.Color(102, 102, 102));
        pinBtn.setPreferredSize(new java.awt.Dimension(110, 40));

        pinBtnLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        pinBtnLabel.setForeground(new java.awt.Color(255, 255, 255));
        pinBtnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pinBtnLabel.setText("Cambiar PIN");
        pinBtnLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pinBtnLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pinBtnLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pinBtnLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pinBtnLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pinBtnLayout = new javax.swing.GroupLayout(pinBtn);
        pinBtn.setLayout(pinBtnLayout);
        pinBtnLayout.setHorizontalGroup(
            pinBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pinBtnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pinBtnLayout.setVerticalGroup(
            pinBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pinBtnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bg.add(pinBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 150, 40));
        pinBtn.getAccessibleContext().setAccessibleDescription("");

        missingBtn.setBackground(new java.awt.Color(0, 0, 0));
        missingBtn.setForeground(new java.awt.Color(102, 102, 102));
        missingBtn.setPreferredSize(new java.awt.Dimension(110, 40));

        missingLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        missingLabel.setForeground(new java.awt.Color(255, 255, 255));
        missingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        missingLabel.setText("?");
        missingLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        missingLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                missingLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                missingLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                missingLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout missingBtnLayout = new javax.swing.GroupLayout(missingBtn);
        missingBtn.setLayout(missingBtnLayout);
        missingBtnLayout.setHorizontalGroup(
            missingBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(missingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        missingBtnLayout.setVerticalGroup(
            missingBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, missingBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(missingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bg.add(missingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 330, 150, -1));

        retiroBtn.setBackground(new java.awt.Color(0, 0, 0));
        retiroBtn.setForeground(new java.awt.Color(102, 102, 102));
        retiroBtn.setPreferredSize(new java.awt.Dimension(110, 40));

        retiroLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        retiroLabel.setForeground(new java.awt.Color(255, 255, 255));
        retiroLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        retiroLabel.setText("Retiro de Efectivo");
        retiroLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        retiroLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                retiroLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                retiroLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                retiroLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout retiroBtnLayout = new javax.swing.GroupLayout(retiroBtn);
        retiroBtn.setLayout(retiroBtnLayout);
        retiroBtnLayout.setHorizontalGroup(
            retiroBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(retiroLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        retiroBtnLayout.setVerticalGroup(
            retiroBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(retiroLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        bg.add(retiroBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 150, -1));

        depositoBtn.setBackground(new java.awt.Color(0, 0, 0));
        depositoBtn.setForeground(new java.awt.Color(102, 102, 102));
        depositoBtn.setPreferredSize(new java.awt.Dimension(110, 40));

        depositoBtnLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        depositoBtnLabel.setForeground(new java.awt.Color(255, 255, 255));
        depositoBtnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        depositoBtnLabel.setText("DepÃ³sito de Efectivo");
        depositoBtnLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        depositoBtnLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                depositoBtnLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                depositoBtnLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                depositoBtnLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout depositoBtnLayout = new javax.swing.GroupLayout(depositoBtn);
        depositoBtn.setLayout(depositoBtnLayout);
        depositoBtnLayout.setHorizontalGroup(
            depositoBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(depositoBtnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        depositoBtnLayout.setVerticalGroup(
            depositoBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(depositoBtnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        bg.add(depositoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 150, -1));

        transferBtn.setBackground(new java.awt.Color(0, 0, 0));
        transferBtn.setForeground(new java.awt.Color(102, 102, 102));
        transferBtn.setPreferredSize(new java.awt.Dimension(110, 40));

        transferBtnLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        transferBtnLabel.setForeground(new java.awt.Color(255, 255, 255));
        transferBtnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        transferBtnLabel.setText("Transferir");
        transferBtnLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        transferBtnLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transferBtnLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                transferBtnLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                transferBtnLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout transferBtnLayout = new javax.swing.GroupLayout(transferBtn);
        transferBtn.setLayout(transferBtnLayout);
        transferBtnLayout.setHorizontalGroup(
            transferBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(transferBtnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        transferBtnLayout.setVerticalGroup(
            transferBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(transferBtnLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        bg.add(transferBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back1MouseClicked
        new InicioSesion().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_back1MouseClicked

    private void back1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back1MouseEntered
        backBtn.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_back1MouseEntered

    private void back1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back1MouseExited
        backBtn.setBackground(Color.white);
    }//GEN-LAST:event_back1MouseExited

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
        exitBtn.setBackground(Color.red);
        exit.setForeground(Color.white);
    }//GEN-LAST:event_exitMouseEntered

    private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
        exitBtn.setBackground(Color.white);
        exit.setForeground(Color.black);
    }//GEN-LAST:event_exitMouseExited

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private boolean isInvalidPin(String pin) {
        if (pin.isEmpty() || pin.length() != 4) {
            return true;
        }

        try {
            Integer.parseInt(pin);
        } catch (NumberFormatException e) {
            return true;
        }

        return false;
    }


    private void retiroLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retiroLabelMouseClicked

        String[] options = new String[accounts.size()];
        for (int i = 0; i < accounts.size(); i++) {
            options[i] = String.valueOf(accounts.get(i).getAccountNumber());
        }

        String selectedAccount = (String) JOptionPane.showInputDialog(null,
                "Seleccione un nÃºmero de cuenta:", "SelecciÃ³n de Cuenta",
                JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

        if (selectedAccount != null) {
            long selectedAccountNumber = Long.parseLong(selectedAccount);

            for (Cuenta account : accounts) {
                if (account.getAccountNumber() == selectedAccountNumber) {

                    String balanceInput = JOptionPane.showInputDialog(null,
                            "Ingrese la cantidad a retirar en la cuenta " + selectedAccountNumber
                            + "\nSaldo actual: $" + account.getBalance()
                    );

                    BigDecimal balance = new BigDecimal(balanceInput);

                    account.withdraw(balance);

                    break;
                }
            }

            this.dispose();
            new Inicio(name, lastname, accounts, username, pin).setVisible(true);
        }
    }//GEN-LAST:event_retiroLabelMouseClicked

    private void depositoBtnLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_depositoBtnLabelMouseClicked

        String[] options = new String[accounts.size()];
        for (int i = 0; i < accounts.size(); i++) {
            options[i] = String.valueOf(accounts.get(i).getAccountNumber());
        }

        String selectedAccount = (String) JOptionPane.showInputDialog(null,
                "Seleccione un nÃºmero de cuenta:", "SelecciÃ³n de Cuenta",
                JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

        if (selectedAccount != null) {
            long selectedAccountNumber = Long.parseLong(selectedAccount);

            for (Cuenta account : accounts) {
                if (account.getAccountNumber() == selectedAccountNumber) {

                    String balanceInput = JOptionPane.showInputDialog(null,
                            "Ingrese la cantidad a depositar en la cuenta " + selectedAccountNumber
                            + "\nSaldo actual: $" + account.getBalance()
                    );

                    BigDecimal balance = new BigDecimal(balanceInput);

                    account.deposit(balance);

                    break;
                }
            }

            this.dispose();
            new Inicio(name, lastname, accounts, username, pin).setVisible(true);
        }    }//GEN-LAST:event_depositoBtnLabelMouseClicked

    private void transferBtnLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transferBtnLabelMouseClicked

        String[] options = {"Propia", "Externa"};

        int choice = JOptionPane.showOptionDialog(
                null,
                "Â¿Desea realizar una transferencia a una cuenta propia o una externa?",
                "SelecciÃ³n",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                null,
                options,
                options[0]
        );

        if (choice == JOptionPane.YES_OPTION) {
            String[] accountOptions = new String[accounts.size()];

            for (int i = 0; i < accounts.size(); i++) {
                accountOptions[i] = String.valueOf(accounts.get(i).getAccountNumber());
            }

            String selectedAccount = (String) JOptionPane.showInputDialog(null,
                    "Seleccione el nÃºmero de cuenta del cual desea enviar los fondos de la transferencia", "SelecciÃ³n de Cuenta",
                    JOptionPane.PLAIN_MESSAGE, null, accountOptions, accountOptions[0]);

            if (selectedAccount != null) {
                long selectedAccountNumber = Long.parseLong(selectedAccount);

                for (Cuenta account : accounts) {
                    if (account.getAccountNumber() == selectedAccountNumber) {

                        String amountInput = JOptionPane.showInputDialog(null,
                                "Ingrese la cantidad a transferir desde la cuenta " + selectedAccountNumber
                                + "\nSaldo actual: $" + account.getBalance()
                        );

                        BigDecimal amount = new BigDecimal(amountInput);

                        if (account.getBalance().compareTo(amount) >= 0) {

                            BigDecimal newSenderBalance = account.getBalance().subtract(amount);
                            account.setBalance(newSenderBalance);
                            updateAccountBalance(selectedAccountNumber, newSenderBalance);

                            String selectedDestinataryAccount = (String) JOptionPane.showInputDialog(null,
                                    "Seleccione el nÃºmero de cuenta destino", "SelecciÃ³n de Cuenta Destino",
                                    JOptionPane.PLAIN_MESSAGE, null, accountOptions, accountOptions[0]);

                            long destinataryAccountNumber = Long.parseLong(selectedDestinataryAccount);

                            if (selectedDestinataryAccount != null) {
                                Object[] destinataryAccountInfo = getDestinataryAccountNumber(destinataryAccountNumber);
                                LocalDate date = LocalDate.now();
                                LocalTime currentTime = LocalTime.now();

                                BigDecimal destinataryBalance = (BigDecimal) destinataryAccountInfo[1];
                                BigDecimal newDestinataryBalance = destinataryBalance.add(amount);

                                for (Cuenta destinataryAccount : accounts) {
                                    if (destinataryAccount.getAccountNumber() == destinataryAccountNumber) {
                                        destinataryAccount.setBalance(newDestinataryBalance);
                                        break;
                                    }
                                }

                                updateAccountBalance(destinataryAccountNumber, newDestinataryBalance);
                                Transaccion transaction = new Transaccion(date, currentTime, amount, TipoTransaccion.TRANSFERENCIA);
                                transaction.createTransaction(selectedAccountNumber, date, currentTime, amount, TipoTransaccion.TRANSFERENCIA, destinataryAccountNumber);

                                int option = JOptionPane.showConfirmDialog(null, "Â¿Quieres imprimir un recibo?", "Recibo", JOptionPane.YES_NO_OPTION);

                                if (option == JOptionPane.YES_OPTION) {
                                    DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");
                                    String formattedTime = currentTime.format(timeFormatter);

                                    JOptionPane.showMessageDialog(null, "NÃºmero de cuenta: " + String.valueOf(selectedAccountNumber) + "\nFecha: " + date.toString() + "\nHora: " + formattedTime + "\nMonto: $" + amount.toString(), "Recibo", JOptionPane.INFORMATION_MESSAGE);

                                }

                                JOptionPane.showMessageDialog(null, "Transferencia realizada con Ã©xito");

                            }

                            this.dispose();
                            new Inicio(name, lastname, accounts, username, pin).setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(null, "Saldo insuficiente en la cuenta");
                        }

                        break;
                    }
                }

            }
        } else if (choice == JOptionPane.NO_OPTION) {
            String destinataryAccount = JOptionPane.showInputDialog(null, "Ingrese el nÃºmero de cuenta al que desea depositar dinero");
            long destinataryAccountNumber = Long.parseLong(destinataryAccount);
            String amountInput = JOptionPane.showInputDialog(null, "Ingrese la cantidad a transferir a la cuenta " + destinataryAccountNumber);

            BigDecimal amount = new BigDecimal(amountInput);

            Object[] destinataryAccountInfo = getDestinataryAccountNumber(destinataryAccountNumber);
            LocalDate date = LocalDate.now();

            LocalTime currentTime = LocalTime.now();

            if (destinataryAccountInfo != null && destinataryAccountInfo.length == 2) {

                BigDecimal destinataryAccountBalance = (BigDecimal) destinataryAccountInfo[1];

                BigDecimal newDestinataryBalance = destinataryAccountBalance.add(amount);
                updateAccountBalance(destinataryAccountNumber, newDestinataryBalance);
                Transaccion transaction = new Transaccion(date, currentTime, amount, TipoTransaccion.TRANSFERENCIA_RECIBIDA);

                transaction.createTransaction(destinataryAccountNumber, date, currentTime, amount, TipoTransaccion.TRANSFERENCIA_RECIBIDA, 0);
                int option = JOptionPane.showConfirmDialog(null, "Â¿Quieres imprimir un recibo?", "Recibo", JOptionPane.YES_NO_OPTION);

                DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");
                String formattedTime = currentTime.format(timeFormatter);

                if (option == JOptionPane.YES_OPTION) {

                    JOptionPane.showMessageDialog(null, "NÃºmero de cuenta destino: " + String.valueOf(destinataryAccountNumber) + "\nFecha: " + date.toString() + "\nHora: " + formattedTime + "\nMonto: $" + amount.toString(), "Recibo", JOptionPane.INFORMATION_MESSAGE);

                }
                JOptionPane.showMessageDialog(null, "Transferencia realizada con Ã©xito");
            }

        }
    }//GEN-LAST:event_transferBtnLabelMouseClicked

    private void updateAccountBalance(long accountNumber, BigDecimal newBalance) {
        Conexion connectionObject = new Conexion();
        String updateSql = "UPDATE cuenta SET saldo = ? WHERE numero_cuenta = ?";

        try {
            PreparedStatement ps = connectionObject.establishConnection().prepareStatement(updateSql);
            ps.setBigDecimal(1, newBalance);
            ps.setLong(2, accountNumber);
            ps.executeUpdate();

        } catch (SQLException ex) {
            ex.printStackTrace();

        }
    }

    private Object[] getDestinataryAccountNumber(long destinataryAccountNumber) {
        Conexion connectionObject = new Conexion();
        String cuentaSql = "SELECT numero_cuenta, saldo FROM cuenta WHERE numero_cuenta = ?";
        Object[] result = null;
        try {

            PreparedStatement ps = connectionObject.establishConnection().prepareStatement(cuentaSql);
            ps.setLong(1, destinataryAccountNumber);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {

                long accountNumber = rs.getLong("numero_cuenta");
                BigDecimal balance = rs.getBigDecimal("saldo");

                result = new Object[]{accountNumber, balance};
            } else {
                JOptionPane.showMessageDialog(null, "NÃºmero de cuenta destino incorrecta");
            }

        } catch (SQLException ex) {
            Logger.getLogger(InicioSesion.class.getName()).log(Level.SEVERE, null, ex);
        }

        return result;
    }


    private void pinBtnLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pinBtnLabelMouseClicked
        String pinActual;
        String nuevoPin;
        String nuevoPinConfirm;
        do {
            pinActual = JOptionPane.showInputDialog(null, "Ingrese su PIN actual");

            if (isInvalidPin(pinActual)) {
                JOptionPane.showMessageDialog(null, "PIN ingresado en formato incorrecto");
            }
        } while (isInvalidPin(pinActual));

        int pinActualInt = Integer.parseInt(pinActual);

        if (pinActualInt == pin) {
            do {
                nuevoPin = JOptionPane.showInputDialog(null, "Ingrese su nuevo PIN");

                if (isInvalidPin(nuevoPin)) {
                    JOptionPane.showMessageDialog(null, "PIN ingresado en formato incorrecto");
                }
            } while (isInvalidPin(nuevoPin));

            do {
                nuevoPinConfirm = JOptionPane.showInputDialog(null, "Por favor confirme su nuevo PIN");

                if (isInvalidPin(nuevoPinConfirm)) {
                    JOptionPane.showMessageDialog(null, "PIN ingresado en formato incorrecto");
                }
            } while (isInvalidPin(nuevoPinConfirm));

            if (nuevoPin.equals(nuevoPinConfirm)) {
                if (nuevoPin.equals(pinActual)) {
                    JOptionPane.showMessageDialog(null, "El nuevo PIN no puede ser igual al PIN actual");
                } else {
                    int nuevoPinInt = Integer.parseInt(nuevoPin);
                    Usuario usuario = new Usuario(name, lastname, username, nuevoPinInt, accounts.size());
                    usuario.changeUsernamePin(username, nuevoPinInt);
                    pin = nuevoPinInt;
                    this.dispose();
                    new Inicio(name, lastname, accounts, username, pin).setVisible(true);
                    JOptionPane.showMessageDialog(null, "CAMBIO DE CONTRASEÃ‘A EXITOSO");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El nÃºmero de PIN no coincide con la confirmaciÃ³n");
            }

        } else {
            JOptionPane.showMessageDialog(null, "NÃºmero de PIN incorrecto");
        }


    }//GEN-LAST:event_pinBtnLabelMouseClicked

    private void retiroLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retiroLabelMouseEntered
        retiroBtn.setBackground(new Color(102, 102, 102));
        retiroLabel.setForeground(Color.black);
    }//GEN-LAST:event_retiroLabelMouseEntered

    private void retiroLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retiroLabelMouseExited
        retiroBtn.setBackground(new Color(0, 0, 0));
        retiroLabel.setForeground(Color.white);
    }//GEN-LAST:event_retiroLabelMouseExited

    private void depositoBtnLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_depositoBtnLabelMouseEntered
        depositoBtn.setBackground(new Color(102, 102, 102));
        depositoBtnLabel.setForeground(Color.black);
    }//GEN-LAST:event_depositoBtnLabelMouseEntered

    private void depositoBtnLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_depositoBtnLabelMouseExited
        depositoBtn.setBackground(new Color(0, 0, 0));
        depositoBtnLabel.setForeground(Color.white);
    }//GEN-LAST:event_depositoBtnLabelMouseExited

    private void transferBtnLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transferBtnLabelMouseEntered
        transferBtn.setBackground(new Color(102, 102, 102));
        transferBtnLabel.setForeground(Color.black);
    }//GEN-LAST:event_transferBtnLabelMouseEntered

    private void transferBtnLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transferBtnLabelMouseExited
        transferBtn.setBackground(new Color(0, 0, 0));
        transferBtnLabel.setForeground(Color.white);
    }//GEN-LAST:event_transferBtnLabelMouseExited

    private void pinBtnLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pinBtnLabelMouseEntered
        pinBtn.setBackground(new Color(102, 102, 102));
        pinBtnLabel.setForeground(Color.black);
    }//GEN-LAST:event_pinBtnLabelMouseEntered

    private void pinBtnLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pinBtnLabelMouseExited
        pinBtn.setBackground(new Color(0, 0, 0));
        pinBtnLabel.setForeground(Color.white);
    }//GEN-LAST:event_pinBtnLabelMouseExited

    private void missingLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_missingLabelMouseEntered
        missingBtn.setBackground(new Color(102, 102, 102));
        missingLabel.setForeground(Color.black);
    }//GEN-LAST:event_missingLabelMouseEntered

    private void missingLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_missingLabelMouseExited
        missingBtn.setBackground(new Color(0, 0, 0));
        missingLabel.setForeground(Color.white);
    }//GEN-LAST:event_missingLabelMouseExited

    private void missingLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_missingLabelMouseClicked
        JOptionPane.showMessageDialog(null, "PRÃ“XIMAMENTE");
    }//GEN-LAST:event_missingLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                List<Cuenta> accounts = new ArrayList<>();

                accounts.add(new Cuenta(5592284705L, new BigDecimal("2999.23")));
                accounts.add(new Cuenta(3898058768L, new BigDecimal("23231.22")));
                accounts.add(new Cuenta(8826793634L, new BigDecimal("123213.00")));

                Inicio inicio = new Inicio("Nombre", "Apellido", accounts, "", 0);
                inicio.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back1;
    private javax.swing.JPanel backBtn;
    private javax.swing.JPanel bg;
    private javax.swing.JPanel depositoBtn;
    private javax.swing.JLabel depositoBtnLabel;
    private javax.swing.JLabel exit;
    private javax.swing.JPanel exitBtn;
    private javax.swing.JPanel header;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel missingBtn;
    private javax.swing.JLabel missingLabel;
    private javax.swing.JPanel pinBtn;
    private javax.swing.JLabel pinBtnLabel;
    private javax.swing.JPanel retiroBtn;
    private javax.swing.JLabel retiroLabel;
    private javax.swing.JLabel title;
    private javax.swing.JPanel transferBtn;
    private javax.swing.JLabel transferBtnLabel;
    // End of variables declaration//GEN-END:variables
}
